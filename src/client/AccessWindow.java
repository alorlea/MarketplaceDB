/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AccessWindow.java
 *
 * Created on 23-nov-2011, 13:25:34
 */
package client;

import java.awt.Color;
import java.rmi.Naming;

import server.IMarketplace;

/**
 *
 * @author Alberto Lorente Leal <albll@kth.se>, <a.lorenteleal@gmail.com>
 */
public class AccessWindow extends javax.swing.JFrame {
    
    IMarketplace marketRegistering;
    mainWindow parent;
    boolean isRegistering;
    /** Creates new form AccessWindow */
    public AccessWindow(mainWindow parent, boolean isRegistering) {
        this.parent= parent;
        this.isRegistering= isRegistering;
        try{
            marketRegistering = (IMarketplace)Naming.lookup("rmi://localhost/marketplace");
        }
        catch(Exception e){
             System.err.println("The runtime failed: " + e.getMessage());
             System.exit(0);
        }
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        passLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        passText = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameLabel.setText("Name:");

        passLabel.setText("Password:");

        nameText.setName("nameText"); // NOI18N

        passText.setName("passText"); // NOI18N

        statusLabel.setText("Status:");

        infoLabel.setName("infoLabel"); // NOI18N

        okButton.setText("Ok");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButton_OnClick(evt);
            }
        });

        backButton.setText("Back");
        backButton.setName("backButton"); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton_OnClick(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(passLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(okButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backButton))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(statusLabel)
                            .addGap(18, 18, 18)
                            .addComponent(infoLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {infoLabel, nameText, passText});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(passText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(infoLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(okButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButton_OnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButton_OnClick
       accessProcessing();
    }//GEN-LAST:event_okButton_OnClick

    private void backButton_OnClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton_OnClick
       this.setVisible(false);
       parent.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_backButton_OnClick

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel passLabel;
    private javax.swing.JTextField passText;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
    
    private void accessProcessing(){
        String name = nameText.getText();
        String pass = passText.getText();
        //User is registering
        if(isRegistering){
            
            if(pass.length()<8){
                infoLabel.setForeground(Color.red);
                infoLabel.setText("Password minimum length is 8");
            }
            else{
                try{
                    if(marketRegistering.registerClient(name, pass)){
                        infoLabel.setForeground(Color.GREEN);
                        infoLabel.setText("Registering Succesful");
                    }
                    else{
                        infoLabel.setForeground(Color.BLUE);
                        infoLabel.setText("Account already exists");
                    }
                }
                catch( Exception e){
                    System.err.println("The runtime failed: " + e.getMessage());
                    System.exit(0);
                }
            }
        }
        //user is logging in
        else{
           try
           {
              if (marketRegistering.isUserRegistered(name, pass) == false)
              {
                 infoLabel.setForeground(Color.red);
                 infoLabel.setText("User is not registered in the system");
              }
              else
              {
                 new MarketClient(name, pass).setVisible(true);
                 this.setVisible(false);
                 parent.dispose();
                 this.dispose();
              }
           }
           catch (Exception e)
           {
              System.err.println("The runtime failed: " + e.getMessage());
              System.exit(0);
           }
        }
    }
}

